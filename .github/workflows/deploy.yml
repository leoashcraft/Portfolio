name: Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Compile CSS and Javascript
      run: |
        npm install
        npm run build

    - name: Configure PHP 8.2
      uses: shivammathur/setup-php@master
      with:
        php-version: 8.2
        extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml, dom, mbstring

    - name: Composer install
      run: |
        composer install --no-dev --no-interaction --prefer-dist

    - name: Create deployment artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=tests *

    - name: Store artifact for distribution
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    name: Prepare release on server
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: ${{ secrets.DROPLET_PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.DROPLET_PATH }}/artifacts
          timeout: 120s
          command_timeout: 120s
      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: ${{ secrets.DROPLET_PORT }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "${{ secrets.DROPLET_PATH }}/releases/${GITHUB_SHA}"
            tar xzf ${{ secrets.DROPLET_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.DROPLET_PATH }}/releases/${GITHUB_SHA}"
            rm -rf ${{ secrets.DROPLET_PATH }}/releases/${GITHUB_SHA}/storage

            mkdir -p ${{ secrets.DROPLET_PATH }}/storage/{app,framework,logs}
            mkdir -p ${{ secrets.DROPLET_PATH }}/storage/framework/{cache,sessions,testing,views}
            mkdir -p ${{ secrets.DROPLET_PATH }}/storage/app/{public}
            mkdir -p ${{ secrets.DROPLET_PATH }}/bootstrap/cache
            chmod -R 775 ${{ secrets.DROPLET_PATH }}/storage
            chmod -R 775 ${{ secrets.DROPLET_PATH }}/bootstrap/cache
            chown -R www-data:www-data ${{ secrets.DROPLET_PATH }}/storage
            chown -R www-data:www-data ${{ secrets.DROPLET_PATH }}/bootstrap/cache

  activate-release:
    name: Activate release
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers ]
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.DROPLET_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.DROPLET_PATH }}/current
          STORAGE_PATH: ${{ secrets.DROPLET_PATH }}
          BASE_PATH: ${{ secrets.DROPLET_PATH }}
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: ${{ secrets.DROPLET_PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,LARAVEL_ENV
          script: |
            printf "%s" "$LARAVEL_ENV" > "${BASE_PATH}/.env"
            ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
            ln -s -f $STORAGE_PATH $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            service php8.2-fpm reload
            # Create necessary directories
            mkdir -p /var/www/html/artifacts/current/storage/{app,framework,logs}
            mkdir -p /var/www/html/artifacts/current/storage/framework/{cache,sessions,testing,views}
            mkdir -p /var/www/html/artifacts/current/bootstrap/cache
            chmod -R 775 /var/www/html/artifacts/current/storage
            chmod -R 775 /var/www/html/artifacts/current/bootstrap/cache
            chown -R www-data:www-data /var/www/html/artifacts/current/storage
            chown -R www-data:www-data /var/www/html/artifacts/current/bootstrap/cache
            composer install --no-dev --no-interaction --prefer-dist

  clean-up:
    name: Clean up
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers, activate-release ]
    steps:
      - name: Clean up old releases
        uses: appleboy/ssh-action@master
        env:
          RELEASES_PATH: ${{ secrets.DROPLET_PATH }}/releases
          ARTIFACTS_PATH: ${{ secrets.DROPLET_PATH }}/artifacts
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: ${{ secrets.DROPLET_PORT }}
          envs: RELEASES_PATH,ARTIFACTS_PATH
          script: |
            cd $RELEASES_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
            cd $ARTIFACTS_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
